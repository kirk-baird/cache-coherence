/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    RecoverableAccount: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "anEntryPoint",
              type: "address",
              internalType: "contract IEntryPoint",
            },
            {
              name: "anOwner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "addDeposit",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "callbackRecoverAccount",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "entryPoint",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IEntryPoint",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "execute",
          inputs: [
            {
              name: "dest",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "func",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeBatch",
          inputs: [
            {
              name: "dest",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "value",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "func",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getDeposit",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getNonce",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "onERC1155BatchReceived",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "onERC1155Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "onERC721Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "recoverAccount",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "validateUserOp",
          inputs: [
            {
              name: "userOp",
              type: "tuple",
              internalType: "struct PackedUserOperation",
              components: [
                {
                  name: "sender",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "nonce",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "initCode",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "callData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "accountGasLimits",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "preVerificationGas",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "gasFees",
                  type: "bytes32",
                  internalType: "bytes32",
                },
                {
                  name: "paymasterAndData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "signature",
                  type: "bytes",
                  internalType: "bytes",
                },
              ],
            },
            {
              name: "userOpHash",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "missingAccountFunds",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "validationData",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawDepositTo",
          inputs: [
            {
              name: "withdrawAddress",
              type: "address",
              internalType: "address payable",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "AccountRecovered",
          inputs: [
            {
              name: "oldOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
      ],
      inheritedFunctions: {
        entryPoint: "lib/account-abstraction/contracts/core/BaseAccount.sol",
        getNonce: "lib/account-abstraction/contracts/core/BaseAccount.sol",
        validateUserOp: "lib/account-abstraction/contracts/core/BaseAccount.sol",
        onERC1155BatchReceived: "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        onERC1155Received: "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        onERC721Received: "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        supportsInterface: "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
